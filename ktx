#!/usr/bin/env bash

# Copyright 2017 Heptio Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ktx() {

    # Test that we have a $HOME/.kube to work with
    if [ ! -d "${HOME}/.kube" ]; then
        echo "echo \"The default kubeconfig directory does not exist: ${HOME}/.kube. Exiting...\""
        return 1
    fi

    # Verify our $HOME/.kube isn't empty
    if [ -z "$(ls -A ${HOME}/.kube)" ]; then
        echo "echo \"No configs present in ${HOME}/.kube. Exiting...\""
        return 1
    fi

    # If no argument was given then list found configs
    if [ -z "$1" ]; then
      # List the files in $HOME/.kube
      for kube in $(find "${HOME}/.kube" -maxdepth 1 -type f -o -type l); do
        if [[ "${KUBECONFIG}" == "$kube" ]]; then
          echo -n "(active) "
        fi
        echo $(basename "${kube}")
      done

      # List files in current directory (rudimentary check if they are kubeconfig files)
      for kube in $(find "$(pwd)" -maxdepth 1 -type f -o -type l); do
        if grep -qix -m 1 "kind: config" "$kube"; then
          if [[ "${KUBECONFIG}" == "$kube" ]]; then
            echo -n "(active) "
          fi
          echo $(basename "${kube}")    \(in $(pwd)\)
        fi
      done

      return
    fi

    # If argument is "None" then unset the KUBECONFIG variable
    if [[ "$1" == "none" ]] || [[ "$1" == "None" ]]; then
        unset KUBECONFIG
        return
    fi

    # Verify config exists
    if [ -e "${HOME}/.kube/${1}" ]; then
        export KUBECONFIG="${HOME}/.kube/${1}"
    elif [ -e "$(pwd)/${1}" ]; then
        export KUBECONFIG="$(pwd)/${1}"
    else
        echo "echo \"The following kubeconfig does not exist: ${1}. Exiting...\""
        return 1
    fi
}

